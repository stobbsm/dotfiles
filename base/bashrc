#
# ~/.bashrc
#

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

# Source global bashrc if it exists
if [ -f /etc/bashrc ]; then
	. /etc/bashrc
fi

# Include alias and functions
[[ -f ~/.bash_functions ]] && . ~/.bash_functions
[[ -f ~/.bash_alias ]] && . ~/.bash_alias
[[ -f ~/.bash_colours ]] && . ~/.bash_colours
[[ -f ~/.bash_config ]] && . ~/.bash_config

if is_gnome
then
	eval $(gnome-keyring-daemon --start --components=pkcs11,secrets,ssh)
elif is_plasma
then
	GPG_TTY=$(tty)
	export GPG_TTY
	gpg-connect-agent updatestartuptty /bye >/dev/null
	if [ "${gnupg_SSH_AUTH_SOCK_by:-0}" -ne $$ ]
	then
		SSH_AUTH_SOCK="$(gpgconf --list-dirs agent-ssh-socket)"
		export SSH_AUTH_SOCK
 	fi

fi

updatepath
export PATH

# Update the gpg-agent tty
gpg-connect-agent updatestartuptty /bye >/dev/null

# Search for powerline, import it if available

if check_command powerline
then
	source /usr/lib/python3.6/site-packages/powerline/bindings/bash/powerline.sh
else
	# Set a nice prompt when powerline isn't available
	PROMPT_COMMAND=__prompt_command
fi

if check_command mpc
then
	export MPD_HOST=$HOME/.config/mpd/socket
fi

# bash-completion
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

